@using Extensions
@model ClimbingEntities.Lists.ListHeader
<table>
    <thead>
        <tr>
            <td rowspan="2">Место</td>
            <td rowspan="2">Фамилия, Имя</td>
            <td rowspan="2">Г.р.</td>
            <td rowspan="2">Команда</td>
            <td rowspan="2">Разряд</td>
            @for(int i = 0; i < Model.RouteNumber; i++)
            {
                <td colspan="2">@string.Format("Трасса {0}", i + 1)</td>
            }
            <td rowspan="2">Рез-т</td>
            <td rowspan="2">Ст.№</td>
        </tr>
        <tr>
            @for(int i=0;i<Model.RouteNumber;i++)
            {
                <td>Top</td>
                <td>Bonus</td>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var m in Model.PreloadedSortedResults.OfType<ClimbingEntities.Lists.ListLineBoulder>())
        {
            <tr
                @if(m.Qf!= ClimbingCompetition.Common.NextRoundQf.NotQf)
                {
                    @:style="background-color:lightgreen"
                }
                >
                <td>@m.PosText</td>
                <td>@m.Climber.Person.FullName</td>
                <td>@m.Climber.Person.YearOfBirth</td>
                <td>@m.Climber.Team</td>
                <td>@m.Climber.Qf.EnumFriendlyValue()</td>
                @for(int i=0;i<Model.RouteNumber;i++)
                {
                    ClimbingEntities.Lists.ListLineBoulderRoute route = m[i + 1];
                    if(route != null)
                    {
                        <td>@route.TopAttempt</td>
                        <td>@route.BonusAttempt</td>
                    }
                    else
                    {
                        <td>-</td>
                        <td>-</td>
                    }
                }
                <td>@string.Format("{0}/{1} {2}/{3}", m.Tops, m.TopAttempts, m.Bonuses, m.BonusAttempts)</td>
                <td>@m.Start</td>
            </tr>
        }
    </tbody>
</table>
