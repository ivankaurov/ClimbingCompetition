@model IEnumerable<RoleSelectorModel>
@{
    CompetitionModel comp = ViewBag.Comp;
    String message = ViewBag.Message;
    ViewBag.Title = "Пользователи для " + comp.ShortName;
    var items = Model.ToArray();
}

<h2>@ViewBag.Title</h2>
@if (!String.IsNullOrEmpty(message))
{
    <div class="message-success">@message</div>
}
@Html.ValidationSummary(false)
@using (Html.BeginForm(new { id = comp.Iid }))
{
    <table>
        <thead>
            <tr>
                <th></th>
                <th>@Html.DisplayNameFor(m=>m.UserName)</th>
                <th>@Html.DisplayNameFor(m=>m.RegionName)</th>
                <th>@Html.DisplayNameFor(m=>m.Role)</th>
            </tr>
        </thead>
        <tbody>
           @for (int k = 0; k < items.Length; k++)
           {
               <tr>
                <td>
                    @(k + 1)
                    @Html.HiddenFor(m => items[k].ReadOnly)
                    @Html.HiddenFor(m => items[k].UserId)
                </td>
                <td>
                    @Html.DisplayFor(m => items[k].UserName)
                    @Html.HiddenFor(m => items[k].UserName)
                </td>
                <td>
                    @Html.DisplayFor(m => items[k].RegionName)
                    @Html.HiddenFor(m => items[k].RegionName)
                </td>
                <td>
                    @if (items[k].ReadOnly)
                    {
                        @Html.HiddenFor(m => items[k].Role)
                        @(items[k].Role.GetFriendlyValue())
                    }
                    else
                    {
                        @Html.EnumDropDownList(String.Format("items[{0}].Role", k), items[k].Role, "Нет доступа")
                    }
                </td>
               </tr>
           }
        </tbody>
    </table>
    <input type="submit" value="Сохранить изменения" />
}
