@model IEnumerable<LeadResultLine>
@{
    ListHeaderModel header = ViewBag.Header;
    ViewBag.Title = String.Format("{0}{1} {2}{3}", header.Live ? "Live! " : String.Empty, header.Round,
                       header.GroupId == null ? String.Empty : (header.Group.AgeGroup.SecretaryName + " "), header.Style);
    bool hasTime = (Model.Count(r => !String.IsNullOrEmpty(r.TimeText)) > 0);
}
@*<div id="@ViewBag.DivID">*@
    @Html.Hidden("is_live", header.Live)
<h2>@ViewBag.Title</h2>
<table>
    <tr>
        <th>@Html.DisplayNameFor(model => model.PosText)</th>
        <th>@Html.DisplayNameFor(model => model.Climber)</th>
        <th>@Html.DisplayNameFor(model => model.Climber.TeamList)</th>
        <th>@Html.DisplayNameFor(model => model.Climber.Age)</th>
        <th>@Html.DisplayNameFor(model => model.Climber.Qf)</th>
        <th>@Html.DisplayNameFor(model => model.ResText)</th>
        @if (hasTime)
        {
            <th>@Html.DisplayNameFor(model => model.TimeText)</th>
        }
        <th>@Html.DisplayNameFor(model => model.StartNumber)</th>
    </tr>
    @foreach (var item in Model.Where(r => !r.PreQf))
    {
        <tr class="@(String.IsNullOrEmpty(item.Qf)?String.Empty:"qf")">
            <td>@Html.DisplayFor(m => item.PosText)</td>
            <td>@Html.DisplayFor(m => item.Climber.ClimberName)</td>
            <td>@Html.DisplayFor(m => item.Climber.TeamList)</td>
            <td>@Html.DisplayFor(m => item.Climber.Age)</td>
            <td>@item.Climber.Qf.GetFriendlyValue()</td>
            <td>@Html.DisplayFor(m => item.ResText)</td>
            @if (hasTime)
            {
                <td>@Html.DisplayFor(m => item.TimeText)</td>
            }
            <td>@Html.DisplayFor(m => item.StartNumber)</td>
        </tr>
    }
</table>
@*</div>*@