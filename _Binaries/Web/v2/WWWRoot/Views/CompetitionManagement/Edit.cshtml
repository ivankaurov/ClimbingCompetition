@model WebClimbing2.Models.CompetitionManagement.CompetitionViewModel

@{
    ViewBag.Title = Model == null ? "Новые соревнования" : Model.ShortName;
    int year = Model == null ? DateTime.Now.Year : Model.StartDate.Year;
    string zone = (ViewBag.Zone as string) ?? string.Empty;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Save", "CompetitionManagement", new { zone = zone }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Iid)
    @Html.Hidden("zone", zone)
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppCorrEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppCorrEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppCorrEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowMultipleTeams, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AllowMultipleTeams)
                    @Html.ValidationMessageFor(model => model.AllowMultipleTeams, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.OrganizerId, (IEnumerable<SelectListItem>)ViewBag.Organizers, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrganizerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password)
            <br />
            @Ajax.ActionLink("Новый пароль", "GeneratePassword", new { elementName = "Password" }, new AjaxOptions
            {
                AllowCache = false,
                Confirm = "Создать новый пароль?",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "pwd_box"
            });
            <div class="col-md-10" id="pwd_box">
                @Html.DisplayFor(m => m.Password)
                @Html.HiddenFor(m => m.Password)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "Index", "Home", new { zone = zone, year = year }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
